name: 'Notify Teams'
description: 'Notify a Teams channel when a build fails or recovers'
inputs:
  teams-webhook-url:
    description: 'Teams webhook URL'
    required: true
runs:
  using: "composite"
  steps:
    - name: Notify Teams About Failure
      if: ${{ job.status == 'failure' }}
      run: |
         cat << EOF > message.json
         {"@type":"MessageCard","@context":"https://schema.org/extensions","summary":"Gradle Publish Failed!","themeColor":"ff0000","title":"Failure Notification from GitHub Gradle Publish","sections":[{"facts":[{"name":"Status:","value":"Failed"},{"name":"Repository:","value":"$GITHUB_REPOSITORY"},{"name":"Branch:","value":"$GITHUB_REF_NAME"},{"name":"Commit:","value":"$GITHUB_SHA"}]}],"potentialAction":[{"@type":"OpenUri","name":"View on GitHub","targets":[{"os":"default","uri":"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"}]}]}
         EOF
         curl -X POST ${{ inputs.teams-webhook-url }} --header "Content-Type: application/json" -d @message.json
      shell: bash
    - name: Get current workflow id
      if: ${{ job.status == 'success' }}
      uses: actions/github-script@v6
      id: workflow-id
      with:
        script: |
          const run = await github.rest.actions.getWorkflowRun({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: ${{ github.run_id }}
          })
          return run.data.workflow_id
        result-encoding: string
    - name: Get latest workflow run status
      if: ${{ job.status == 'success' }}
      uses: actions/github-script@v6
      id: latest-workflow-status
      with:
        script: |
          const runs = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: ${{ steps.workflow-id.outputs.result }},
            per_page: 2
          })
          return runs.data.workflow_runs[1].conclusion
        result-encoding: string
    # If previous workflow run failed and the current succeeded
    - name: Notify Teams About Failure Recovery
      if: ${{ job.status == 'success' && steps.latest-workflow-status.outputs.result == 'failure' }}
      run: |
         cat << EOF > message.json
         {"@type":"MessageCard","@context":"https://schema.org/extensions","summary":"Gradle Publish Back to Normal!","themeColor":"00ff00","title":"Success Notification from GitHub Gradle Publish","sections":[{"facts":[{"name":"Status:","value":"Back to Normal"},{"name":"Repository:","value":"$GITHUB_REPOSITORY"},{"name":"Branch:","value":"$GITHUB_REF_NAME"},{"name":"Commit:","value":"$GITHUB_SHA"}]}],"potentialAction":[{"@type":"OpenUri","name":"View on GitHub","targets":[{"os":"default","uri":"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"}]}]}
         EOF
         curl -X POST ${{ inputs.teams-webhook-url }} --header "Content-Type: application/json" -d @message.json
      shell: bash
